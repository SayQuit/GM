#include "map.h"
#ifndef PlaywindowArraySize_x
#define PlaywindowArraySize_x 16
#endif
#ifndef PlaywindowArraySize_y
#define PlaywindowArraySize_y 15
#endif
#define Map_Size 700,712.25
#define PlaywindowSize 1440,900
#ifndef SCREEN_X
#define SCREEN_X 1440
#endif
#ifndef SCREEN_Y
#define SCREEN_Y 900
#endif

#ifndef MAPARRAT_X
#define MAPARRAT_X 16
#endif
#ifndef MAPARRAT_Y
#define MAPARRAT_Y 15
#endif
#include"npc.h"


//*********************************************************************************************//
//*********************************************************************************************//
//********************map类有了地图场景的切换作用***************************//
//*********************************************************************************************//
//*********************************************************************************************//

Map::Map(QWidget *parent,QGraphicsScene *Scene,Data *UserData)
{

    this->ID=MYROOM;//这里换成其他为什么会出bug？           //设置初始为家里
    this->MapPos=new Coordinate;                        //人物在地图的初始坐标
    this->ChangeMap(this->ID,parent,Scene,UserData);    //其他初始化，见changemap


}




//*********************************************************************************************//
//**********************************get一些值*******************************************************//
//*********************************************************************************************//
QString Map::getAddress()//获取该地图的场景图片路径
{
    return this->Address;
}
int Map::getx()//获取该地图的初始x坐标
{
    return this->MapPos->getx();
}
int Map::gety()//获取该地图的初始y坐标
{
    return this->MapPos->gety();
}
int Map::getNpcNumber()//获取该地图的npc数量
{
    return this->NpcNumber;
}

PLACE Map::getID()//获取场景名字
{
    return this->ID;
}
//*********************************************************************************************//
//*********************************************************************************************//
//*********************************************************************************************//










/******************墙体判断********************/
bool Map::isZero(int x, int y)
{
    return !this->ItsMap[y][x];
}

















//*********************************************************************************************//
//**********************************展示和隐藏npc对话提示*******************************************************//
//*********************************************************************************************//
bool Map::ShowNpcDia(QGraphicsItem *CollideItem,QKeyEvent *event)
{
    for(int i=0;i<this->getNpcNumber();i++)//这里对每个npc进行遍历
    {

        if(this->NpcInScene[i]->collidesWithItem(CollideItem))//如果该npc碰撞检测为true
        {
            this->NpcInScene[i]->showDialog(event);//则展示提示
        }
        else
        {
            this->NpcInScene[i]->hideDialog();//否则隐藏提示
        }

    }
    return true;
}

bool Map::HideNpcDia()
{
    for(int i=0;i<this->getNpcNumber();i++)
    {
            this->NpcInScene[i]->hideDialog();
    }
    return true;
}
//*********************************************************************************************//
//*********************************************************************************************//
//*********************************************************************************************//



















//*********************************************************************************************//
//**********************************改变地图场景后变化的函数*******************************************************//
//*********************************************************************************************//

Map Map::ChangeMap(PLACE nextID,QWidget *parent,QGraphicsScene *Scene,Data *UserData)
{

    this->Address=this->getSceneAdress(nextID);//地图场景路径改变
    this->MapPos->setCoord(this->DifferMapPos(nextID).getx(),this->DifferMapPos(nextID).gety());//地图初始位置改变



    this->ItsMap=this->getMapArray(nextID);     //地图场景墙体改变
    this->ID=nextID;                            //地图场景名字改变
    this->ChangeNpc(nextID,parent,Scene,UserData);//npc改变

    Map M=*this;
    return M;       //返回map
}

/****************************改变npc的函数****************************/
bool Map::ChangeNpc(PLACE nextID,QWidget *parent,QGraphicsScene *Scene,Data *UserData)
{

    if(nextID==POLICEOFFICE)//目前只做了policeoffice的场景人物
    {

        this->NpcNumber=2;
        this->NpcInScene[0]=new Donne(parent,Scene);
        this->NpcInScene[1]=new Mirror(parent,Scene,UserData);

    }
    else
    {
        this->NpcNumber=0;
        for(int i=0;i<this->NpcNumber;i++)
        {
            this->NpcInScene[i]=NULL;
        }
    }

    for(int i=0;i<this->NpcNumber;i++)
    {
        Scene->addItem(this->NpcInScene[i]->getDialog());//将场景npc添入，还应该有场景人物的删除removeItem
    }
    return true;

}

//*********************************************************************************************//
//*********************************************************************************************//
//*********************************************************************************************//






















//*********************************************************************************************//
//**********************************返回场景的各种属性**********************************************//
//*********************************************************************************************//


QString Map::getSceneAdress(PLACE ID)//场景地图路径选择
{
    switch(ID)
    {
        case MYROOM:return QString(":/Scene/Room.png");break;
        case EASTAREA:return QString(":/Scene/EastArea.png");break;
        case POLICEOFFICE:return QString(":/Scene/PoliceOffice.png");break;
        default:return NULL;
    }

}
Coordinate Map::DifferMapPos(PLACE CoordID)//场景人物初始化坐标选择
{

    switch(CoordID)
    {

        case MYROOM:return Coordinate(1360,40);break;
        case EASTAREA:return Coordinate(500,400);break;
        case POLICEOFFICE:return Coordinate(900,300);break;
        default:return Coordinate(0,0);
    }
}

/****获取墙体数组*****/
int** Map::getMapArray(PLACE nextID)
{
    int **MapArray;
    MapArray=new int *[MAPARRAT_Y];
    for(int i=0;i<MAPARRAT_Y;i++)
    {
        MapArray[i]=new int [MAPARRAT_X];
    }

    if(nextID==MYROOM)//自己的房间
    {

        int tempMap[MAPARRAT_Y][MAPARRAT_X]=
        {
            {0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        };


        for(int i=0;i<MAPARRAT_Y;i++)
        {
           for(int j=0;j<MAPARRAT_X;j++)
           {
              MapArray[i][j]=tempMap[i][j];
               //this->WallMap[i][j]=1;
           }
        }

    }


    else if(nextID==EASTAREA)//东区
    {

        int tempMap[MAPARRAT_Y][MAPARRAT_X]=
        {
            {1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1},
            {1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1},
            {1,1,0,0,0,1,0,1,0,0,1,0,0,1,1,1},
            {1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1},
            {1,1,0,0,0,1,0,1,0,1,1,1,0,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,0,1,0,0,1,1,0,0,1,0,0,0,1,1},
            {1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1},
            {1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };

        for(int i=0;i<MAPARRAT_Y;i++)
        {
           for(int j=0;j<MAPARRAT_X;j++)
           {
              MapArray[i][j]=tempMap[i][j];
               //this->WallMap[i][j]=1;
           }
        }


    }

    else if(nextID==POLICEOFFICE)//警察局
    {

        int tempMap[MAPARRAT_Y][MAPARRAT_X]=
        {
            {0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1},
            {0,0,0,0,0,0,0,0,1,0,1,1,1,0,0,1},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,0},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
        };

        for(int i=0;i<MAPARRAT_Y;i++)
        {
           for(int j=0;j<MAPARRAT_X;j++)
           {
              MapArray[i][j]=tempMap[i][j];
           }
        }
     }


     return MapArray;
}
//*********************************************************************************************//
//*********************************************************************************************//
//*********************************************************************************************//



















/*下面的东西应该要改，懒得注释了*/
ACTION Map::Detect(int x,int y)
{

    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    if(this->ID==MYROOM)//自己的房间
    {
        if(y>=590)
        {
            return OPENINGMAP;//
        }
        if(x<=1070&&x>=1050&&y<=50&&y>=30)
        {
            return READING;
        }
    }

    else if(this->ID==EASTAREA)//东区
    {

    }

    else if(this->ID==POLICEOFFICE)//警察局
    {

    }
    return NOTHING;
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
}

ACTION Map::Detect()
{
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    if(this->ID==MYROOM)//自己的房间
    {

    }

    else if(this->ID==EASTAREA)//东区
    {

    }

    else if(this->ID==POLICEOFFICE)//警察局
    {
        return TALKING;
    }
    return NOTHING;
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
    //***************************改*********************************//
}




